%% -*- erlang -*-

%% Files order: html, js, css, license
main(Files) ->
    Read =
        fun(File, Acc) ->
            case file:read_file(File) of
                {ok, Data} ->
                    Acc ++ [Data];
                {error, Rsn} ->
                    error_exit("Could not read file ~tp for reason ~tp", [File, Rsn])
            end
        end,
    [HTML, CSS, JS, License] = lists:foldl(Read, [], Files),
    Data =
        "%% Auto generated by build_web_assets.script\n\n"
        "-module(emeter_web_assets).\n"
        "-export([html/0, css/0, js/0, license/0]).\n\n\n"
        "html() ->\n"
        "    ~p.\n\n\n"
        "css() ->\n"
        "    ~p.\n\n\n"
        "js() ->\n"
        "    ~p.\n\n\n"
        "license() ->\n"
        "    ~p.\n",
        Data2 = io_lib:format(Data, [HTML, CSS, JS, License]),
    case file:write_file("./src/emeter_web_assets.erl", Data2) of
        ok ->
            ok;
        {error, Rsn} ->
            error_exit("Could not write data to file ~tp for reason ~tp", ["./src/emeter_web_assets.erl", Rsn])
    end.


error_exit(Txt, Args) ->
    io:format("\e[31m Error: " ++ Txt ++ "\e[0m\n", Args),
    erlang:halt(1).